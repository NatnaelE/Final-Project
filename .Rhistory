all_coffee <- morning_coffee * 2
print(all_coffee)
# Create a boolean variable `too_expensive`, set to TRUE if the cost is greater
# than $1,000
too_expensive <- total_cost > 1000
max_puppies <- 1000 / puppy_price
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
# Create a new variable `lyric_e` that is the `intro` combined with the new
print(lyric_e)
num <- my_num(4,5)
vector[-4]
c(vector[1:3], vector[5])
vector <- c("str_to_upper", "str_to_lower","capatilize", "lowercase", "str_to_random")
vector[3]
vector[1:3]
vector[-4]
c(vector[1:3], vector[5])
gdp_data <- read.csv("data/FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("ggmap", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("lintr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("styler", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
setwd("~/Desktop/Final-Project")
gdp_data <- read.csv("data/FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
gdp_d <- gdp_data %>%
select(Area.Code, Area, Element,Item,Year, Unit, Value) %>%
filter(Year >= 2000, Year <= 2012)
countries <- gdp_d %>%
filter(Item == "Gross Domestic Product", Year == "2000", Area == "Afghanistan") %>%
select(Value)
gdp_plot <-  ggplot(data = gdp_d) +
geom_line(mapping = aes(
x = Year,
y = Value,
color = Value
)) +
geom_point() +
labs(
x = "Year",
y = "GDP",
title = "GDP and country"
)
gdp_plot
gdp_plot <-  ggplot(data = gdp_d) +
geom_line(mapping = aes(
x = Year,
y = Value,
color = Value
)) +
labs(
x = "Year",
y = "GDP",
title = "GDP and country"
)
gdp_plot
runApp()
runApp()
View(gdp_d)
View(gdp_d)
runApp()
runApp()
runApp()
gdp_plot <-  ggplot(data = gdp_d) +
geom_smooth(mapping = aes(
x = Year,
y = Value,
color = Value
)) +
labs(
x = "Year",
y = "GDP",
title = "GDP and country"
)
gdp_plot
runApp()
runApp()
setwd("~/Desktop/test")
setwd("~/Desktop/test")
setwd("~/Desktop/test")
#MACROINDICATORS
gdp_data <- read.csv("data/FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/test")
#MACROINDICATORS
gdp_data <- read.csv("data/FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/test")
#MACROINDICATORS
gdp_data <- read.csv("data/FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
#MACROINDICATORS
gdp_data <- read.csv("/FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
#MACROINDICATORS
gdp_data <- read.csv("FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
gdp_d <- gdp_data %>%
select(Area.Code, Area, Element,Item,Year, Unit, Value) %>%
filter(Year >= 2000, Year <= 2012)
countries <- gdp_d %>%
filter(Item == "Gross Domestic Product", Year == "2000", Area == "Afghanistan") %>%
select(Value)
gdp_plot <-  ggplot(data = gdp_d) +
geom_line(mapping = aes(
x = Year,
y = Value,
color = Value
)) +
labs(
x = "Year",
y = "GDP",
title = "GDP and country"
)
gdp_plot
#MACROINDICATORS
gdp_data <- read.csv("FAOSTAT_macroindicators.csv", stringsAsFactors = FALSE)
gdp_d <- gdp_data %>%
select(Area.Code, Area, Element,Item,Year, Unit, Value) %>%
filter(Year >= 2000, Year <= 2012)
countries <- gdp_d %>%
filter(Item == "Gross Domestic Product" & "Gross National Income", Year == "2000", Area == "Afghanistan") %>%
select(Value)
gdp_plot <-  ggplot(data = gdp_d) +
geom_bar(mapping = aes(
x = Year,
y = Value,
fill = Item
)) +
labs(
x = "Year",
y = "GDP",
title = "GDP and country"
)
gdp_plot
gdp_plot <-  ggplot(data = gdp_d) +
geom_bar(mapping = aes(
x = Value,
y = Year,
fill = Item
)) +
labs(
x = "Year",
y = "GDP",
title = "GDP and country"
)
gdp_plot
j <- ggplot() + geom_bar(aes(y = Value, x = Year, fill = Item), data = gdp_d)
j
View(j)
j <- ggplot() + geom_bar(aes(y = Value, x = Year, fill = Item), data = gdp_d, stat = "identity")
j
countries <- gdp_d %>%
filter(Year == "2000", Area == "Afghanistan")
View(countries)
coun_choices <- gdp_d %>%  filter(Year == "2000", Value = "Gross Domestic Product")
coun_choices <- gdp_d %>%  filter(Year == "2000", Value == "Gross Domestic Product")
View(coun_choices)
coun_choices <- gdp_d %>%  filter(Year == "2000", Value == "Gross National Income")
View(countries)
coun_choices <- gdp_d %>%
select(Year == "2000", Value == "Gross National Income")
coun_choices <- gdp_d %>%
filter(Year == "2000", Value == "Gross National Income")
coun_choices <- gdp_d %>% filter(Year == "2000")
View(coun_choices)
coun_choices <- gdp_d %>% filter(Year == "2000") %>%unique()
coun_choices <- gdp_d %>% filter(Year == "2000") %>%unique(Area)
coun_choices <- gdp_d %>% filter(Year == "2000") %>%unique(gdp_d$Area)
coun_choices <- gdp_d %>% filter(Year == "2000", Item == "Gross Domestic Product")
View(coun_choices)
coun_choices <- gdp_d %>% filter(Year == "2000", Item == "Gross Domestic Product", Element == "Value Local Currency")
%>% select(Area)
coun_choices <- gdp_d %>%
filter(Year == "2000", Item == "Gross Domestic Product", Element == "Value Local Currency")%>%
select(Area)
coun_choices <- gdp_d %>%
filter(Year == "2000", Item == "Gross Domestic Product", Element == "Value Local Currency")%>%
select(Area) %>% as.character()
runApp()
runApp()
runApp()
coun_choices <- gdp_d %>%
filter(Year == "2000", Item == "Gross Domestic Product", Element == "Value Local Currency")%>%
select(Area)
coun_choices[,1]
runApp()
navbarPage(
"Midwestern State Data Analysis",
tabPanel(
"bar plot",
titlePanel("economic bar plot"),
sidebarLayout(
sidebarPanel(
selectInput(
"country_y",
label = "Choose  country",
choices = coun_choices[,1]
)
),
mainPanel(
plotOutput("bar_ploty")
)
)
)
)
runApp()
rownames(coun_choices) <- coun_choices[,1]
runApp()
rownames(coun_choices) <- coun_choices[,1]
runApp()
runApp()
runApp()
coun_choices <- gdp_d %>%
filter(Year == "2000", Item == "Gross Domestic Product", Element == "Value Local Currency")%>%
select(Area)
coun_choices <- gdp_d %>%
filter(Year == "2000", Item == "Gross Domestic Product", Element == "Value Local Currency")%>%
select(Area) %>%  as.character()
coun_choices
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
j
View(gdp_d)
View(gdp_d)
runApp()
runApp('~/Desktop/Final-Project')
runApp('~/Desktop/Final-Project')
runApp('~/Desktop/Final-Project')
runApp('~/Desktop/Final-Project')
runApp('~/Desktop/Final-Project')
library("shiny")
runApp('~/Desktop/Final-Project')
runApp('~/Desktop/Final-Project')
runApp('~/Desktop/Final-Project')
runApp('~/Desktop/Final-Project')
choropleth
output$choropleth <- renderPlotly({
land_data <- full_land_data %>%
select(
-Domain.Code, -Domain, -Area.Code, -Element.Code, -Item.Code,
-Year.Code, -Unit, -Flag, -Flag.Description
) %>%
filter(Year >= 2000, Year <= 2016, Element != "Share in Forest land")
colnames(land_data)[colnames(land_data) == "Area"] <- "Country"
countries <- read.csv("data/countries_long_lat.csv", stringsAsFactors = FALSE) %>%
select(-Alpha.2.code, -Alpha.3.code, -Numeric.code, -Icon)
tot_land_data <- left_join(land_data, countries)
share_agricultural_land <- tot_land_data %>% filter(Element == "Share in Agricultural land")
# INPUT---------------------------------------
agri_element_map <- share_agricultural_land %>%
filter(Item == input$itemn, Year == input$yearn) %>% ##
select(-Latitude..average., -Longitude..average.)
colnames(df)[1] <- "Country"
df[15, 1] <- "Bahamas"
df[46, 1] <- "Congo"
df[47, 1] <- "Democratic Republic of the Congo"
df[74, 1] <- "Gambia"
df[134, 1] <- "Micronesia (Federated States of)"
df[165, 1] <- "Russian Federation"
df[177, 1] <- "Serbia and Montenegro"
df[190, 1] <- "Sudan (former)"
df[195, 1] <- "Syrian Arab Republic"
df[198, 1] <- "United Republic of Tanzania"
df[212, 1] <- "United States of America"
df[216, 1] <- "Venezuela (Bolivarian Republic of)"
df[217, 1] <- "Viet Nam"
df[218, 1] <- "United States Virgin Islands"
df[25, 1] <- "Bolivia (Plurinational State of)"
df[30, 1] <- "Brunei Darussalam"
df[50, 1] <- "CÃ´te d'Ivoire"
df[55, 1] <- "Czechia"
df[109, 1] <- "Democratic People's Republic of Korea"
df[95, 1] <- "Iran (Islamic Republic of)"
df[108, 1] <- "Republic of Korea"
df[113, 1] <- "Lao People's Democratic Republic"
df[123, 1] <- "North Macedonia"
df[135, 1] <- "Republic of Moldova"
df <- df[-c(33, 53, 7, 67, 74, 78, 80, 84, 90, 110, 122, 136, 138, 169, 181, 187, 192, 196, 207)]
chorodata <- left_join(agri_element_map, df) %>% na.omit()
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = "Mercator")
)
choropleth <- plot_geo(chorodata) %>%
add_trace(
z = ~Value, color = ~Value, colors = "Greens",
text = ~Country, locations = ~CODE, marker = list(line = l)
) %>%
colorbar(title = paste0("% of ", input$itemn), ticksuffix = "%") %>%
layout(
title = paste0("Percentage of ", input$itemn, " Worldwide in ", input$yearn),
geo = g
)
choropleth
})
setwd("~/Desktop/Final-Project")
setwd("~/Desktop/Final-Project")
runApp()
runApp()
runApp()
runApp()
